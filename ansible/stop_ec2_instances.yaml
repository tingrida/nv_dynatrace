
- name: work with ec2
  hosts: localhost
  vars:
    region: eu-west-1

  tasks:

    - name: get instances with tag Name Dynatrace_Managed
      ec2_instance_info:
        region: "{{ region }}"
        filters:
           "tag:Name": Dynatrace_Managed
           instance-state-name: ["running"]
      register: ec2_instances

    - name: print output
      debug:
        msg: "instances found: {{ lookup('ansible.utils.to_paths', ec2_instances) }}"

    - name: initialize instances PublicDns list
      set_fact:
         publicIps: []

    - name: list all ec2 publicDns for instnces matched
      set_fact:
        publicIps: "{{ publicIps + [ item['public_ip_address'] ] }}"
      loop: "{{ ec2_instances['instances'] }}"

    - name: list publicIps of found instances
      debug:
        msg: "instances found: {{ publicIps }}"

    - name: stop OneAgent on other nodes
      delegate_to: "{{ item }}"
      ansible.builtin.service:
        name: oneagent
        state: stopped
      with_items: "{{ groups['dynatrace'] }}"

    - name: stop OneAgent
      delegate_to: "{{ item }}"
      remote_user: ubuntu
      become: true
      ansible.builtin.service:
        name: oneagent
        state: stopped
      loop: "{{ publicIps }}"

    - name: stop Dynatrace Managed
      delegate_to: "{{ item }}"
      remote_user: ubuntu
      ansible.builtin.command:
        cmd: sudo /opt/dynatrace-managed/launcher/dynatrace.sh stop
      loop: "{{ publicIps }}"

    - name: initialize instances list
      set_fact: 
         ids: []  

    - name: list all ec2 instnces matched
      set_fact:
        ids: "{{ ids + [ item['instance_id'] ] }}"
      loop: "{{ ec2_instances['instances'] }}" 
 
    - name: stop instances
      amazon.aws.ec2_instance:
        region: "{{ region }}"
        state: stopped
        instance_ids: 
           - "{{ item }}"
      loop: "{{ ids }}"

